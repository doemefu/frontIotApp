name: Build and Deploy to Raspberry Pi

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-save:
    runs-on: ubuntu-latest
    environment:
      name: 'RaspberryPi'
    steps:
      - name: Checkout Code
        uses: actions/checkout@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Build Docker image
        run: docker buildx build --platform linux/arm64 -t iot-app:front --load .

      - name: Save Docker Image
        run: docker save iot-app:front


  transfer:
    needs: build-and-save
    runs-on: ubuntu-latest
    environment:
      name: 'RaspberryPi'
    steps:
      - name: Checkout Code
        uses: actions/checkout@main

      - name: Copy image to Raspberry Pi
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USERNAME }}
          key: ${{ secrets.RPI_SSH_KEY }}
          port: ${{ secrets.RPI_PORT }}
          source: "."
          target: "/home/dfurchert/iotApp/"


  deploy:
    needs: transfer
    runs-on: ubuntu-latest
    environment:
      name: 'RaspberryPi'
    steps:
      - name: Stop and Remove Old Docker Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USERNAME }}
          key: ${{ secrets.RPI_SSH_KEY }}
          port: ${{ secrets.RPI_PORT }}
          script: |
            cd iotApp/
            docker stop iotapp-frontend-1 || true
            docker rm iotapp-frontend-1 || true

      - name: Replace Docker Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USERNAME }}
          key: ${{ secrets.RPI_SSH_KEY }}
          port: ${{ secrets.RPI_PORT }}
          script: |
            cd iotApp/
            docker rmi iot-app:front || true
            docker load -i iot-app-front

      - name: Start Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USERNAME }}
          key: ${{ secrets.RPI_SSH_KEY }}
          port: ${{ secrets.RPI_PORT }}
          script: |
            cd iotApp/
            docker-compose up -d

      - name: Wait for Services to Stabilize
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USERNAME }}
          key: ${{ secrets.RPI_SSH_KEY }}
          port: ${{ secrets.RPI_PORT }}
          script: sleep 300

      - name: Restart Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USERNAME }}
          key: ${{ secrets.RPI_SSH_KEY }}
          port: ${{ secrets.RPI_PORT }}
          script: |
            cd iotApp/
            docker-compose restart
